[{"name":"DEFAULT()","description":"com.squareup.kotlinpoet.metadata.specs.JvmMethodModifier.DEFAULT","location":"specs/com.squareup.kotlinpoet.metadata.specs/-jvm-method-modifier/-d-e-f-a-u-l-t/index.html","searchKeys":["DEFAULT","DEFAULT()","com.squareup.kotlinpoet.metadata.specs.JvmMethodModifier.DEFAULT"]},{"name":"STATIC()","description":"com.squareup.kotlinpoet.metadata.specs.JvmFieldModifier.STATIC","location":"specs/com.squareup.kotlinpoet.metadata.specs/-jvm-field-modifier/-s-t-a-t-i-c/index.html","searchKeys":["STATIC","STATIC()","com.squareup.kotlinpoet.metadata.specs.JvmFieldModifier.STATIC"]},{"name":"STATIC()","description":"com.squareup.kotlinpoet.metadata.specs.JvmMethodModifier.STATIC","location":"specs/com.squareup.kotlinpoet.metadata.specs/-jvm-method-modifier/-s-t-a-t-i-c/index.html","searchKeys":["STATIC","STATIC()","com.squareup.kotlinpoet.metadata.specs.JvmMethodModifier.STATIC"]},{"name":"SYNCHRONIZED()","description":"com.squareup.kotlinpoet.metadata.specs.JvmMethodModifier.SYNCHRONIZED","location":"specs/com.squareup.kotlinpoet.metadata.specs/-jvm-method-modifier/-s-y-n-c-h-r-o-n-i-z-e-d/index.html","searchKeys":["SYNCHRONIZED","SYNCHRONIZED()","com.squareup.kotlinpoet.metadata.specs.JvmMethodModifier.SYNCHRONIZED"]},{"name":"TRANSIENT()","description":"com.squareup.kotlinpoet.metadata.specs.JvmFieldModifier.TRANSIENT","location":"specs/com.squareup.kotlinpoet.metadata.specs/-jvm-field-modifier/-t-r-a-n-s-i-e-n-t/index.html","searchKeys":["TRANSIENT","TRANSIENT()","com.squareup.kotlinpoet.metadata.specs.JvmFieldModifier.TRANSIENT"]},{"name":"VOLATILE()","description":"com.squareup.kotlinpoet.metadata.specs.JvmFieldModifier.VOLATILE","location":"specs/com.squareup.kotlinpoet.metadata.specs/-jvm-field-modifier/-v-o-l-a-t-i-l-e/index.html","searchKeys":["VOLATILE","VOLATILE()","com.squareup.kotlinpoet.metadata.specs.JvmFieldModifier.VOLATILE"]},{"name":"abstract fun containerData(declarationContainer: ImmutableKmDeclarationContainer, className: ClassName, parentClassName: ClassName?): ContainerData","description":"com.squareup.kotlinpoet.metadata.specs.ClassInspector.containerData","location":"specs/com.squareup.kotlinpoet.metadata.specs/-class-inspector/container-data.html","searchKeys":["containerData","abstract fun containerData(declarationContainer: ImmutableKmDeclarationContainer, className: ClassName, parentClassName: ClassName?): ContainerData","com.squareup.kotlinpoet.metadata.specs.ClassInspector.containerData"]},{"name":"abstract fun declarationContainerFor(className: ClassName): ImmutableKmDeclarationContainer","description":"com.squareup.kotlinpoet.metadata.specs.ClassInspector.declarationContainerFor","location":"specs/com.squareup.kotlinpoet.metadata.specs/-class-inspector/declaration-container-for.html","searchKeys":["declarationContainerFor","abstract fun declarationContainerFor(className: ClassName): ImmutableKmDeclarationContainer","com.squareup.kotlinpoet.metadata.specs.ClassInspector.declarationContainerFor"]},{"name":"abstract fun enumEntry(enumClassName: ClassName, memberName: String): EnumEntryData","description":"com.squareup.kotlinpoet.metadata.specs.ClassInspector.enumEntry","location":"specs/com.squareup.kotlinpoet.metadata.specs/-class-inspector/enum-entry.html","searchKeys":["enumEntry","abstract fun enumEntry(enumClassName: ClassName, memberName: String): EnumEntryData","com.squareup.kotlinpoet.metadata.specs.ClassInspector.enumEntry"]},{"name":"abstract fun isInterface(className: ClassName): Boolean","description":"com.squareup.kotlinpoet.metadata.specs.ClassInspector.isInterface","location":"specs/com.squareup.kotlinpoet.metadata.specs/-class-inspector/is-interface.html","searchKeys":["isInterface","abstract fun isInterface(className: ClassName): Boolean","com.squareup.kotlinpoet.metadata.specs.ClassInspector.isInterface"]},{"name":"abstract fun methodExists(className: ClassName, methodSignature: JvmMethodSignature): Boolean","description":"com.squareup.kotlinpoet.metadata.specs.ClassInspector.methodExists","location":"specs/com.squareup.kotlinpoet.metadata.specs/-class-inspector/method-exists.html","searchKeys":["methodExists","abstract fun methodExists(className: ClassName, methodSignature: JvmMethodSignature): Boolean","com.squareup.kotlinpoet.metadata.specs.ClassInspector.methodExists"]},{"name":"abstract val annotations: Collection<AnnotationSpec>","description":"com.squareup.kotlinpoet.metadata.specs.ContainerData.annotations","location":"specs/com.squareup.kotlinpoet.metadata.specs/-container-data/annotations.html","searchKeys":["annotations","abstract val annotations: Collection<AnnotationSpec>","com.squareup.kotlinpoet.metadata.specs.ContainerData.annotations"]},{"name":"abstract val declarationContainer: ImmutableKmDeclarationContainer","description":"com.squareup.kotlinpoet.metadata.specs.ContainerData.declarationContainer","location":"specs/com.squareup.kotlinpoet.metadata.specs/-container-data/declaration-container.html","searchKeys":["declarationContainer","abstract val declarationContainer: ImmutableKmDeclarationContainer","com.squareup.kotlinpoet.metadata.specs.ContainerData.declarationContainer"]},{"name":"abstract val methods: Map<ImmutableKmFunction, MethodData>","description":"com.squareup.kotlinpoet.metadata.specs.ContainerData.methods","location":"specs/com.squareup.kotlinpoet.metadata.specs/-container-data/methods.html","searchKeys":["methods","abstract val methods: Map<ImmutableKmFunction, MethodData>","com.squareup.kotlinpoet.metadata.specs.ContainerData.methods"]},{"name":"abstract val properties: Map<ImmutableKmProperty, PropertyData>","description":"com.squareup.kotlinpoet.metadata.specs.ContainerData.properties","location":"specs/com.squareup.kotlinpoet.metadata.specs/-container-data/properties.html","searchKeys":["properties","abstract val properties: Map<ImmutableKmProperty, PropertyData>","com.squareup.kotlinpoet.metadata.specs.ContainerData.properties"]},{"name":"abstract val supportsNonRuntimeRetainedAnnotations: Boolean","description":"com.squareup.kotlinpoet.metadata.specs.ClassInspector.supportsNonRuntimeRetainedAnnotations","location":"specs/com.squareup.kotlinpoet.metadata.specs/-class-inspector/supports-non-runtime-retained-annotations.html","searchKeys":["supportsNonRuntimeRetainedAnnotations","abstract val supportsNonRuntimeRetainedAnnotations: Boolean","com.squareup.kotlinpoet.metadata.specs.ClassInspector.supportsNonRuntimeRetainedAnnotations"]},{"name":"class TypeNameAliasTag(type: TypeName)","description":"com.squareup.kotlinpoet.metadata.specs.TypeNameAliasTag","location":"specs/com.squareup.kotlinpoet.metadata.specs/-type-name-alias-tag/index.html","searchKeys":["TypeNameAliasTag","class TypeNameAliasTag(type: TypeName)","com.squareup.kotlinpoet.metadata.specs.TypeNameAliasTag"]},{"name":"data class ClassData(declarationContainer: ImmutableKmClass, className: ClassName, annotations: Collection<AnnotationSpec>, properties: Map<ImmutableKmProperty, PropertyData>, constructors: Map<ImmutableKmConstructor, ConstructorData>, methods: Map<ImmutableKmFunction, MethodData>) : ContainerData","description":"com.squareup.kotlinpoet.metadata.specs.ClassData","location":"specs/com.squareup.kotlinpoet.metadata.specs/-class-data/index.html","searchKeys":["ClassData","data class ClassData(declarationContainer: ImmutableKmClass, className: ClassName, annotations: Collection<AnnotationSpec>, properties: Map<ImmutableKmProperty, PropertyData>, constructors: Map<ImmutableKmConstructor, ConstructorData>, methods: Map<ImmutableKmFunction, MethodData>) : ContainerData","com.squareup.kotlinpoet.metadata.specs.ClassData"]},{"name":"data class ConstructorData(annotations: List<AnnotationSpec>, parameterAnnotations: Map<Int, Collection<AnnotationSpec>>, isSynthetic: Boolean, jvmModifiers: Set<JvmMethodModifier>, exceptions: List<TypeName>)","description":"com.squareup.kotlinpoet.metadata.specs.ConstructorData","location":"specs/com.squareup.kotlinpoet.metadata.specs/-constructor-data/index.html","searchKeys":["ConstructorData","data class ConstructorData(annotations: List<AnnotationSpec>, parameterAnnotations: Map<Int, Collection<AnnotationSpec>>, isSynthetic: Boolean, jvmModifiers: Set<JvmMethodModifier>, exceptions: List<TypeName>)","com.squareup.kotlinpoet.metadata.specs.ConstructorData"]},{"name":"data class EnumEntryData(declarationContainer: ImmutableKmClass?, annotations: Collection<AnnotationSpec>)","description":"com.squareup.kotlinpoet.metadata.specs.EnumEntryData","location":"specs/com.squareup.kotlinpoet.metadata.specs/-enum-entry-data/index.html","searchKeys":["EnumEntryData","data class EnumEntryData(declarationContainer: ImmutableKmClass?, annotations: Collection<AnnotationSpec>)","com.squareup.kotlinpoet.metadata.specs.EnumEntryData"]},{"name":"data class FieldData(annotations: List<AnnotationSpec>, isSynthetic: Boolean, jvmModifiers: Set<JvmFieldModifier>, constant: CodeBlock?)","description":"com.squareup.kotlinpoet.metadata.specs.FieldData","location":"specs/com.squareup.kotlinpoet.metadata.specs/-field-data/index.html","searchKeys":["FieldData","data class FieldData(annotations: List<AnnotationSpec>, isSynthetic: Boolean, jvmModifiers: Set<JvmFieldModifier>, constant: CodeBlock?)","com.squareup.kotlinpoet.metadata.specs.FieldData"]},{"name":"data class FileData(declarationContainer: ImmutableKmPackage, annotations: Collection<AnnotationSpec>, properties: Map<ImmutableKmProperty, PropertyData>, methods: Map<ImmutableKmFunction, MethodData>, className: ClassName, jvmName: String?) : ContainerData","description":"com.squareup.kotlinpoet.metadata.specs.FileData","location":"specs/com.squareup.kotlinpoet.metadata.specs/-file-data/index.html","searchKeys":["FileData","data class FileData(declarationContainer: ImmutableKmPackage, annotations: Collection<AnnotationSpec>, properties: Map<ImmutableKmProperty, PropertyData>, methods: Map<ImmutableKmFunction, MethodData>, className: ClassName, jvmName: String?) : ContainerData","com.squareup.kotlinpoet.metadata.specs.FileData"]},{"name":"data class MethodData(annotations: List<AnnotationSpec>, parameterAnnotations: Map<Int, Collection<AnnotationSpec>>, isSynthetic: Boolean, jvmModifiers: Set<JvmMethodModifier>, isOverride: Boolean, exceptions: List<TypeName>)","description":"com.squareup.kotlinpoet.metadata.specs.MethodData","location":"specs/com.squareup.kotlinpoet.metadata.specs/-method-data/index.html","searchKeys":["MethodData","data class MethodData(annotations: List<AnnotationSpec>, parameterAnnotations: Map<Int, Collection<AnnotationSpec>>, isSynthetic: Boolean, jvmModifiers: Set<JvmMethodModifier>, isOverride: Boolean, exceptions: List<TypeName>)","com.squareup.kotlinpoet.metadata.specs.MethodData"]},{"name":"data class PropertyData(annotations: List<AnnotationSpec>, fieldData: FieldData?, getterData: MethodData?, setterData: MethodData?, isJvmField: Boolean)","description":"com.squareup.kotlinpoet.metadata.specs.PropertyData","location":"specs/com.squareup.kotlinpoet.metadata.specs/-property-data/index.html","searchKeys":["PropertyData","data class PropertyData(annotations: List<AnnotationSpec>, fieldData: FieldData?, getterData: MethodData?, setterData: MethodData?, isJvmField: Boolean)","com.squareup.kotlinpoet.metadata.specs.PropertyData"]},{"name":"enum JvmFieldModifier : Enum<JvmFieldModifier> , JvmModifier","description":"com.squareup.kotlinpoet.metadata.specs.JvmFieldModifier","location":"specs/com.squareup.kotlinpoet.metadata.specs/-jvm-field-modifier/index.html","searchKeys":["JvmFieldModifier","enum JvmFieldModifier : Enum<JvmFieldModifier> , JvmModifier","com.squareup.kotlinpoet.metadata.specs.JvmFieldModifier"]},{"name":"enum JvmMethodModifier : Enum<JvmMethodModifier> , JvmModifier","description":"com.squareup.kotlinpoet.metadata.specs.JvmMethodModifier","location":"specs/com.squareup.kotlinpoet.metadata.specs/-jvm-method-modifier/index.html","searchKeys":["JvmMethodModifier","enum JvmMethodModifier : Enum<JvmMethodModifier> , JvmModifier","com.squareup.kotlinpoet.metadata.specs.JvmMethodModifier"]},{"name":"fun Class<*>.toFileSpec(classInspector: ClassInspector? = null): FileSpec","description":"com.squareup.kotlinpoet.metadata.specs.toFileSpec","location":"specs/com.squareup.kotlinpoet.metadata.specs/to-file-spec.html","searchKeys":["toFileSpec","fun Class<*>.toFileSpec(classInspector: ClassInspector? = null): FileSpec","com.squareup.kotlinpoet.metadata.specs.toFileSpec"]},{"name":"fun Class<*>.toTypeSpec(classInspector: ClassInspector? = null): TypeSpec","description":"com.squareup.kotlinpoet.metadata.specs.toTypeSpec","location":"specs/com.squareup.kotlinpoet.metadata.specs/to-type-spec.html","searchKeys":["toTypeSpec","fun Class<*>.toTypeSpec(classInspector: ClassInspector? = null): TypeSpec","com.squareup.kotlinpoet.metadata.specs.toTypeSpec"]},{"name":"fun ClassData(declarationContainer: ImmutableKmClass, className: ClassName, annotations: Collection<AnnotationSpec>, properties: Map<ImmutableKmProperty, PropertyData>, constructors: Map<ImmutableKmConstructor, ConstructorData>, methods: Map<ImmutableKmFunction, MethodData>)","description":"com.squareup.kotlinpoet.metadata.specs.ClassData.ClassData","location":"specs/com.squareup.kotlinpoet.metadata.specs/-class-data/-class-data.html","searchKeys":["ClassData","fun ClassData(declarationContainer: ImmutableKmClass, className: ClassName, annotations: Collection<AnnotationSpec>, properties: Map<ImmutableKmProperty, PropertyData>, constructors: Map<ImmutableKmConstructor, ConstructorData>, methods: Map<ImmutableKmFunction, MethodData>)","com.squareup.kotlinpoet.metadata.specs.ClassData.ClassData"]},{"name":"fun ClassInspector.classFor(className: ClassName): ImmutableKmClass","description":"com.squareup.kotlinpoet.metadata.specs.classFor","location":"specs/com.squareup.kotlinpoet.metadata.specs/class-for.html","searchKeys":["classFor","fun ClassInspector.classFor(className: ClassName): ImmutableKmClass","com.squareup.kotlinpoet.metadata.specs.classFor"]},{"name":"fun ClassInspector.containerData(className: ClassName, parentClassName: ClassName?): ContainerData","description":"com.squareup.kotlinpoet.metadata.specs.containerData","location":"specs/com.squareup.kotlinpoet.metadata.specs/container-data.html","searchKeys":["containerData","fun ClassInspector.containerData(className: ClassName, parentClassName: ClassName?): ContainerData","com.squareup.kotlinpoet.metadata.specs.containerData"]},{"name":"fun ConstructorData(annotations: List<AnnotationSpec>, parameterAnnotations: Map<Int, Collection<AnnotationSpec>>, isSynthetic: Boolean, jvmModifiers: Set<JvmMethodModifier>, exceptions: List<TypeName>)","description":"com.squareup.kotlinpoet.metadata.specs.ConstructorData.ConstructorData","location":"specs/com.squareup.kotlinpoet.metadata.specs/-constructor-data/-constructor-data.html","searchKeys":["ConstructorData","fun ConstructorData(annotations: List<AnnotationSpec>, parameterAnnotations: Map<Int, Collection<AnnotationSpec>>, isSynthetic: Boolean, jvmModifiers: Set<JvmMethodModifier>, exceptions: List<TypeName>)","com.squareup.kotlinpoet.metadata.specs.ConstructorData.ConstructorData"]},{"name":"fun EnumEntryData(declarationContainer: ImmutableKmClass?, annotations: Collection<AnnotationSpec>)","description":"com.squareup.kotlinpoet.metadata.specs.EnumEntryData.EnumEntryData","location":"specs/com.squareup.kotlinpoet.metadata.specs/-enum-entry-data/-enum-entry-data.html","searchKeys":["EnumEntryData","fun EnumEntryData(declarationContainer: ImmutableKmClass?, annotations: Collection<AnnotationSpec>)","com.squareup.kotlinpoet.metadata.specs.EnumEntryData.EnumEntryData"]},{"name":"fun FieldData(annotations: List<AnnotationSpec>, isSynthetic: Boolean, jvmModifiers: Set<JvmFieldModifier>, constant: CodeBlock?)","description":"com.squareup.kotlinpoet.metadata.specs.FieldData.FieldData","location":"specs/com.squareup.kotlinpoet.metadata.specs/-field-data/-field-data.html","searchKeys":["FieldData","fun FieldData(annotations: List<AnnotationSpec>, isSynthetic: Boolean, jvmModifiers: Set<JvmFieldModifier>, constant: CodeBlock?)","com.squareup.kotlinpoet.metadata.specs.FieldData.FieldData"]},{"name":"fun FileData(declarationContainer: ImmutableKmPackage, annotations: Collection<AnnotationSpec>, properties: Map<ImmutableKmProperty, PropertyData>, methods: Map<ImmutableKmFunction, MethodData>, className: ClassName, jvmName: String? = if (!className.simpleName.endsWith(\"Kt\")) className.simpleName else null)","description":"com.squareup.kotlinpoet.metadata.specs.FileData.FileData","location":"specs/com.squareup.kotlinpoet.metadata.specs/-file-data/-file-data.html","searchKeys":["FileData","fun FileData(declarationContainer: ImmutableKmPackage, annotations: Collection<AnnotationSpec>, properties: Map<ImmutableKmProperty, PropertyData>, methods: Map<ImmutableKmFunction, MethodData>, className: ClassName, jvmName: String? = if (!className.simpleName.endsWith(\"Kt\")) className.simpleName else null)","com.squareup.kotlinpoet.metadata.specs.FileData.FileData"]},{"name":"fun ImmutableKmClass.toFileSpec(classInspector: ClassInspector?, className: ClassName = createClassName(name)): FileSpec","description":"com.squareup.kotlinpoet.metadata.specs.toFileSpec","location":"specs/com.squareup.kotlinpoet.metadata.specs/to-file-spec.html","searchKeys":["toFileSpec","fun ImmutableKmClass.toFileSpec(classInspector: ClassInspector?, className: ClassName = createClassName(name)): FileSpec","com.squareup.kotlinpoet.metadata.specs.toFileSpec"]},{"name":"fun ImmutableKmClass.toTypeSpec(classInspector: ClassInspector?, className: ClassName = createClassName(name)): TypeSpec","description":"com.squareup.kotlinpoet.metadata.specs.toTypeSpec","location":"specs/com.squareup.kotlinpoet.metadata.specs/to-type-spec.html","searchKeys":["toTypeSpec","fun ImmutableKmClass.toTypeSpec(classInspector: ClassInspector?, className: ClassName = createClassName(name)): TypeSpec","com.squareup.kotlinpoet.metadata.specs.toTypeSpec"]},{"name":"fun ImmutableKmPackage.toFileSpec(classInspector: ClassInspector?, className: ClassName): FileSpec","description":"com.squareup.kotlinpoet.metadata.specs.toFileSpec","location":"specs/com.squareup.kotlinpoet.metadata.specs/to-file-spec.html","searchKeys":["toFileSpec","fun ImmutableKmPackage.toFileSpec(classInspector: ClassInspector?, className: ClassName): FileSpec","com.squareup.kotlinpoet.metadata.specs.toFileSpec"]},{"name":"fun Iterable<AnnotationSpec>.toTreeSet(): TreeSet<AnnotationSpec>","description":"com.squareup.kotlinpoet.metadata.specs.internal.ClassInspectorUtil.toTreeSet","location":"specs/com.squareup.kotlinpoet.metadata.specs.internal/-class-inspector-util/to-tree-set.html","searchKeys":["toTreeSet","fun Iterable<AnnotationSpec>.toTreeSet(): TreeSet<AnnotationSpec>","com.squareup.kotlinpoet.metadata.specs.internal.ClassInspectorUtil.toTreeSet"]},{"name":"fun KClass<*>.toFileSpec(classInspector: ClassInspector? = null): FileSpec","description":"com.squareup.kotlinpoet.metadata.specs.toFileSpec","location":"specs/com.squareup.kotlinpoet.metadata.specs/to-file-spec.html","searchKeys":["toFileSpec","fun KClass<*>.toFileSpec(classInspector: ClassInspector? = null): FileSpec","com.squareup.kotlinpoet.metadata.specs.toFileSpec"]},{"name":"fun KClass<*>.toTypeSpec(classInspector: ClassInspector? = null): TypeSpec","description":"com.squareup.kotlinpoet.metadata.specs.toTypeSpec","location":"specs/com.squareup.kotlinpoet.metadata.specs/to-type-spec.html","searchKeys":["toTypeSpec","fun KClass<*>.toTypeSpec(classInspector: ClassInspector? = null): TypeSpec","com.squareup.kotlinpoet.metadata.specs.toTypeSpec"]},{"name":"fun MethodData(annotations: List<AnnotationSpec>, parameterAnnotations: Map<Int, Collection<AnnotationSpec>>, isSynthetic: Boolean, jvmModifiers: Set<JvmMethodModifier>, isOverride: Boolean, exceptions: List<TypeName>)","description":"com.squareup.kotlinpoet.metadata.specs.MethodData.MethodData","location":"specs/com.squareup.kotlinpoet.metadata.specs/-method-data/-method-data.html","searchKeys":["MethodData","fun MethodData(annotations: List<AnnotationSpec>, parameterAnnotations: Map<Int, Collection<AnnotationSpec>>, isSynthetic: Boolean, jvmModifiers: Set<JvmMethodModifier>, isOverride: Boolean, exceptions: List<TypeName>)","com.squareup.kotlinpoet.metadata.specs.MethodData.MethodData"]},{"name":"fun PropertyData(annotations: List<AnnotationSpec>, fieldData: FieldData?, getterData: MethodData?, setterData: MethodData?, isJvmField: Boolean)","description":"com.squareup.kotlinpoet.metadata.specs.PropertyData.PropertyData","location":"specs/com.squareup.kotlinpoet.metadata.specs/-property-data/-property-data.html","searchKeys":["PropertyData","fun PropertyData(annotations: List<AnnotationSpec>, fieldData: FieldData?, getterData: MethodData?, setterData: MethodData?, isJvmField: Boolean)","com.squareup.kotlinpoet.metadata.specs.PropertyData.PropertyData"]},{"name":"fun TypeElement.toFileSpec(classInspector: ClassInspector? = null): FileSpec","description":"com.squareup.kotlinpoet.metadata.specs.toFileSpec","location":"specs/com.squareup.kotlinpoet.metadata.specs/to-file-spec.html","searchKeys":["toFileSpec","fun TypeElement.toFileSpec(classInspector: ClassInspector? = null): FileSpec","com.squareup.kotlinpoet.metadata.specs.toFileSpec"]},{"name":"fun TypeElement.toTypeSpec(classInspector: ClassInspector? = null): TypeSpec","description":"com.squareup.kotlinpoet.metadata.specs.toTypeSpec","location":"specs/com.squareup.kotlinpoet.metadata.specs/to-type-spec.html","searchKeys":["toTypeSpec","fun TypeElement.toTypeSpec(classInspector: ClassInspector? = null): TypeSpec","com.squareup.kotlinpoet.metadata.specs.toTypeSpec"]},{"name":"fun TypeNameAliasTag(type: TypeName)","description":"com.squareup.kotlinpoet.metadata.specs.TypeNameAliasTag.TypeNameAliasTag","location":"specs/com.squareup.kotlinpoet.metadata.specs/-type-name-alias-tag/-type-name-alias-tag.html","searchKeys":["TypeNameAliasTag","fun TypeNameAliasTag(type: TypeName)","com.squareup.kotlinpoet.metadata.specs.TypeNameAliasTag.TypeNameAliasTag"]},{"name":"fun allAnnotations(useSiteTarget: AnnotationSpec.UseSiteTarget? = null, containsReifiedTypeParameter: Boolean = false): Collection<AnnotationSpec>","description":"com.squareup.kotlinpoet.metadata.specs.MethodData.allAnnotations","location":"specs/com.squareup.kotlinpoet.metadata.specs/-method-data/all-annotations.html","searchKeys":["allAnnotations","fun allAnnotations(useSiteTarget: AnnotationSpec.UseSiteTarget? = null, containsReifiedTypeParameter: Boolean = false): Collection<AnnotationSpec>","com.squareup.kotlinpoet.metadata.specs.MethodData.allAnnotations"]},{"name":"fun codeLiteralOf(literal: Any): CodeBlock","description":"com.squareup.kotlinpoet.metadata.specs.internal.ClassInspectorUtil.codeLiteralOf","location":"specs/com.squareup.kotlinpoet.metadata.specs.internal/-class-inspector-util/code-literal-of.html","searchKeys":["codeLiteralOf","fun codeLiteralOf(literal: Any): CodeBlock","com.squareup.kotlinpoet.metadata.specs.internal.ClassInspectorUtil.codeLiteralOf"]},{"name":"fun computeIsJvmField(property: ImmutableKmProperty, classInspector: ClassInspector, isCompanionObject: Boolean, hasGetter: Boolean, hasSetter: Boolean, hasField: Boolean): Boolean","description":"com.squareup.kotlinpoet.metadata.specs.internal.ClassInspectorUtil.computeIsJvmField","location":"specs/com.squareup.kotlinpoet.metadata.specs.internal/-class-inspector-util/compute-is-jvm-field.html","searchKeys":["computeIsJvmField","fun computeIsJvmField(property: ImmutableKmProperty, classInspector: ClassInspector, isCompanionObject: Boolean, hasGetter: Boolean, hasSetter: Boolean, hasField: Boolean): Boolean","com.squareup.kotlinpoet.metadata.specs.internal.ClassInspectorUtil.computeIsJvmField"]},{"name":"fun createAnnotations(siteTarget: AnnotationSpec.UseSiteTarget? = null, body: MutableCollection<AnnotationSpec>.() -> Unit): Collection<AnnotationSpec>","description":"com.squareup.kotlinpoet.metadata.specs.internal.ClassInspectorUtil.createAnnotations","location":"specs/com.squareup.kotlinpoet.metadata.specs.internal/-class-inspector-util/create-annotations.html","searchKeys":["createAnnotations","fun createAnnotations(siteTarget: AnnotationSpec.UseSiteTarget? = null, body: MutableCollection<AnnotationSpec>.() -> Unit): Collection<AnnotationSpec>","com.squareup.kotlinpoet.metadata.specs.internal.ClassInspectorUtil.createAnnotations"]},{"name":"fun createClassName(kotlinMetadataName: String): ClassName","description":"com.squareup.kotlinpoet.metadata.specs.internal.ClassInspectorUtil.createClassName","location":"specs/com.squareup.kotlinpoet.metadata.specs.internal/-class-inspector-util/create-class-name.html","searchKeys":["createClassName","fun createClassName(kotlinMetadataName: String): ClassName","com.squareup.kotlinpoet.metadata.specs.internal.ClassInspectorUtil.createClassName"]},{"name":"fun createThrowsSpec(exceptions: Collection<TypeName>, useSiteTarget: AnnotationSpec.UseSiteTarget? = null): AnnotationSpec","description":"com.squareup.kotlinpoet.metadata.specs.internal.ClassInspectorUtil.createThrowsSpec","location":"specs/com.squareup.kotlinpoet.metadata.specs.internal/-class-inspector-util/create-throws-spec.html","searchKeys":["createThrowsSpec","fun createThrowsSpec(exceptions: Collection<TypeName>, useSiteTarget: AnnotationSpec.UseSiteTarget? = null): AnnotationSpec","com.squareup.kotlinpoet.metadata.specs.internal.ClassInspectorUtil.createThrowsSpec"]},{"name":"fun filterOutNullabilityAnnotations(annotations: List<AnnotationSpec>): List<AnnotationSpec>","description":"com.squareup.kotlinpoet.metadata.specs.internal.ClassInspectorUtil.filterOutNullabilityAnnotations","location":"specs/com.squareup.kotlinpoet.metadata.specs.internal/-class-inspector-util/filter-out-nullability-annotations.html","searchKeys":["filterOutNullabilityAnnotations","fun filterOutNullabilityAnnotations(annotations: List<AnnotationSpec>): List<AnnotationSpec>","com.squareup.kotlinpoet.metadata.specs.internal.ClassInspectorUtil.filterOutNullabilityAnnotations"]},{"name":"interface ClassInspector","description":"com.squareup.kotlinpoet.metadata.specs.ClassInspector","location":"specs/com.squareup.kotlinpoet.metadata.specs/-class-inspector/index.html","searchKeys":["ClassInspector","interface ClassInspector","com.squareup.kotlinpoet.metadata.specs.ClassInspector"]},{"name":"interface ContainerData","description":"com.squareup.kotlinpoet.metadata.specs.ContainerData","location":"specs/com.squareup.kotlinpoet.metadata.specs/-container-data/index.html","searchKeys":["ContainerData","interface ContainerData","com.squareup.kotlinpoet.metadata.specs.ContainerData"]},{"name":"interface JvmModifier","description":"com.squareup.kotlinpoet.metadata.specs.JvmModifier","location":"specs/com.squareup.kotlinpoet.metadata.specs/-jvm-modifier/index.html","searchKeys":["JvmModifier","interface JvmModifier","com.squareup.kotlinpoet.metadata.specs.JvmModifier"]},{"name":"object ClassInspectorUtil","description":"com.squareup.kotlinpoet.metadata.specs.internal.ClassInspectorUtil","location":"specs/com.squareup.kotlinpoet.metadata.specs.internal/-class-inspector-util/index.html","searchKeys":["ClassInspectorUtil","object ClassInspectorUtil","com.squareup.kotlinpoet.metadata.specs.internal.ClassInspectorUtil"]},{"name":"object Companion","description":"com.squareup.kotlinpoet.metadata.specs.ConstructorData.Companion","location":"specs/com.squareup.kotlinpoet.metadata.specs/-constructor-data/-companion/index.html","searchKeys":["Companion","object Companion","com.squareup.kotlinpoet.metadata.specs.ConstructorData.Companion"]},{"name":"object Companion","description":"com.squareup.kotlinpoet.metadata.specs.FieldData.Companion","location":"specs/com.squareup.kotlinpoet.metadata.specs/-field-data/-companion/index.html","searchKeys":["Companion","object Companion","com.squareup.kotlinpoet.metadata.specs.FieldData.Companion"]},{"name":"object Companion","description":"com.squareup.kotlinpoet.metadata.specs.MethodData.Companion","location":"specs/com.squareup.kotlinpoet.metadata.specs/-method-data/-companion/index.html","searchKeys":["Companion","object Companion","com.squareup.kotlinpoet.metadata.specs.MethodData.Companion"]},{"name":"open fun annotationSpec(): AnnotationSpec?","description":"com.squareup.kotlinpoet.metadata.specs.JvmModifier.annotationSpec","location":"specs/com.squareup.kotlinpoet.metadata.specs/-jvm-modifier/annotation-spec.html","searchKeys":["annotationSpec","open fun annotationSpec(): AnnotationSpec?","com.squareup.kotlinpoet.metadata.specs.JvmModifier.annotationSpec"]},{"name":"open override fun annotationSpec(): AnnotationSpec","description":"com.squareup.kotlinpoet.metadata.specs.JvmFieldModifier.STATIC.annotationSpec","location":"specs/com.squareup.kotlinpoet.metadata.specs/-jvm-field-modifier/-s-t-a-t-i-c/annotation-spec.html","searchKeys":["annotationSpec","open override fun annotationSpec(): AnnotationSpec","com.squareup.kotlinpoet.metadata.specs.JvmFieldModifier.STATIC.annotationSpec"]},{"name":"open override fun annotationSpec(): AnnotationSpec","description":"com.squareup.kotlinpoet.metadata.specs.JvmFieldModifier.TRANSIENT.annotationSpec","location":"specs/com.squareup.kotlinpoet.metadata.specs/-jvm-field-modifier/-t-r-a-n-s-i-e-n-t/annotation-spec.html","searchKeys":["annotationSpec","open override fun annotationSpec(): AnnotationSpec","com.squareup.kotlinpoet.metadata.specs.JvmFieldModifier.TRANSIENT.annotationSpec"]},{"name":"open override fun annotationSpec(): AnnotationSpec","description":"com.squareup.kotlinpoet.metadata.specs.JvmFieldModifier.VOLATILE.annotationSpec","location":"specs/com.squareup.kotlinpoet.metadata.specs/-jvm-field-modifier/-v-o-l-a-t-i-l-e/annotation-spec.html","searchKeys":["annotationSpec","open override fun annotationSpec(): AnnotationSpec","com.squareup.kotlinpoet.metadata.specs.JvmFieldModifier.VOLATILE.annotationSpec"]},{"name":"open override fun annotationSpec(): AnnotationSpec","description":"com.squareup.kotlinpoet.metadata.specs.JvmMethodModifier.STATIC.annotationSpec","location":"specs/com.squareup.kotlinpoet.metadata.specs/-jvm-method-modifier/-s-t-a-t-i-c/annotation-spec.html","searchKeys":["annotationSpec","open override fun annotationSpec(): AnnotationSpec","com.squareup.kotlinpoet.metadata.specs.JvmMethodModifier.STATIC.annotationSpec"]},{"name":"open override fun annotationSpec(): AnnotationSpec","description":"com.squareup.kotlinpoet.metadata.specs.JvmMethodModifier.SYNCHRONIZED.annotationSpec","location":"specs/com.squareup.kotlinpoet.metadata.specs/-jvm-method-modifier/-s-y-n-c-h-r-o-n-i-z-e-d/annotation-spec.html","searchKeys":["annotationSpec","open override fun annotationSpec(): AnnotationSpec","com.squareup.kotlinpoet.metadata.specs.JvmMethodModifier.SYNCHRONIZED.annotationSpec"]},{"name":"open override val annotations: Collection<AnnotationSpec>","description":"com.squareup.kotlinpoet.metadata.specs.ClassData.annotations","location":"specs/com.squareup.kotlinpoet.metadata.specs/-class-data/annotations.html","searchKeys":["annotations","open override val annotations: Collection<AnnotationSpec>","com.squareup.kotlinpoet.metadata.specs.ClassData.annotations"]},{"name":"open override val annotations: Collection<AnnotationSpec>","description":"com.squareup.kotlinpoet.metadata.specs.FileData.annotations","location":"specs/com.squareup.kotlinpoet.metadata.specs/-file-data/annotations.html","searchKeys":["annotations","open override val annotations: Collection<AnnotationSpec>","com.squareup.kotlinpoet.metadata.specs.FileData.annotations"]},{"name":"open override val declarationContainer: ImmutableKmClass","description":"com.squareup.kotlinpoet.metadata.specs.ClassData.declarationContainer","location":"specs/com.squareup.kotlinpoet.metadata.specs/-class-data/declaration-container.html","searchKeys":["declarationContainer","open override val declarationContainer: ImmutableKmClass","com.squareup.kotlinpoet.metadata.specs.ClassData.declarationContainer"]},{"name":"open override val declarationContainer: ImmutableKmPackage","description":"com.squareup.kotlinpoet.metadata.specs.FileData.declarationContainer","location":"specs/com.squareup.kotlinpoet.metadata.specs/-file-data/declaration-container.html","searchKeys":["declarationContainer","open override val declarationContainer: ImmutableKmPackage","com.squareup.kotlinpoet.metadata.specs.FileData.declarationContainer"]},{"name":"open override val methods: Map<ImmutableKmFunction, MethodData>","description":"com.squareup.kotlinpoet.metadata.specs.ClassData.methods","location":"specs/com.squareup.kotlinpoet.metadata.specs/-class-data/methods.html","searchKeys":["methods","open override val methods: Map<ImmutableKmFunction, MethodData>","com.squareup.kotlinpoet.metadata.specs.ClassData.methods"]},{"name":"open override val methods: Map<ImmutableKmFunction, MethodData>","description":"com.squareup.kotlinpoet.metadata.specs.FileData.methods","location":"specs/com.squareup.kotlinpoet.metadata.specs/-file-data/methods.html","searchKeys":["methods","open override val methods: Map<ImmutableKmFunction, MethodData>","com.squareup.kotlinpoet.metadata.specs.FileData.methods"]},{"name":"open override val properties: Map<ImmutableKmProperty, PropertyData>","description":"com.squareup.kotlinpoet.metadata.specs.ClassData.properties","location":"specs/com.squareup.kotlinpoet.metadata.specs/-class-data/properties.html","searchKeys":["properties","open override val properties: Map<ImmutableKmProperty, PropertyData>","com.squareup.kotlinpoet.metadata.specs.ClassData.properties"]},{"name":"open override val properties: Map<ImmutableKmProperty, PropertyData>","description":"com.squareup.kotlinpoet.metadata.specs.FileData.properties","location":"specs/com.squareup.kotlinpoet.metadata.specs/-file-data/properties.html","searchKeys":["properties","open override val properties: Map<ImmutableKmProperty, PropertyData>","com.squareup.kotlinpoet.metadata.specs.FileData.properties"]},{"name":"val EMPTY: ConstructorData","description":"com.squareup.kotlinpoet.metadata.specs.ConstructorData.Companion.EMPTY","location":"specs/com.squareup.kotlinpoet.metadata.specs/-constructor-data/-companion/-e-m-p-t-y.html","searchKeys":["EMPTY","val EMPTY: ConstructorData","com.squareup.kotlinpoet.metadata.specs.ConstructorData.Companion.EMPTY"]},{"name":"val EMPTY: MethodData","description":"com.squareup.kotlinpoet.metadata.specs.MethodData.Companion.EMPTY","location":"specs/com.squareup.kotlinpoet.metadata.specs/-method-data/-companion/-e-m-p-t-y.html","searchKeys":["EMPTY","val EMPTY: MethodData","com.squareup.kotlinpoet.metadata.specs.MethodData.Companion.EMPTY"]},{"name":"val JVM_NAME: ClassName","description":"com.squareup.kotlinpoet.metadata.specs.internal.ClassInspectorUtil.JVM_NAME","location":"specs/com.squareup.kotlinpoet.metadata.specs.internal/-class-inspector-util/-j-v-m_-n-a-m-e.html","searchKeys":["JVM_NAME","val JVM_NAME: ClassName","com.squareup.kotlinpoet.metadata.specs.internal.ClassInspectorUtil.JVM_NAME"]},{"name":"val KOTLIN_INTRINSIC_INTERFACES: Set<ClassName>","description":"com.squareup.kotlinpoet.metadata.specs.internal.ClassInspectorUtil.KOTLIN_INTRINSIC_INTERFACES","location":"specs/com.squareup.kotlinpoet.metadata.specs.internal/-class-inspector-util/-k-o-t-l-i-n_-i-n-t-r-i-n-s-i-c_-i-n-t-e-r-f-a-c-e-s.html","searchKeys":["KOTLIN_INTRINSIC_INTERFACES","val KOTLIN_INTRINSIC_INTERFACES: Set<ClassName>","com.squareup.kotlinpoet.metadata.specs.internal.ClassInspectorUtil.KOTLIN_INTRINSIC_INTERFACES"]},{"name":"val SYNTHETIC: FieldData","description":"com.squareup.kotlinpoet.metadata.specs.FieldData.Companion.SYNTHETIC","location":"specs/com.squareup.kotlinpoet.metadata.specs/-field-data/-companion/-s-y-n-t-h-e-t-i-c.html","searchKeys":["SYNTHETIC","val SYNTHETIC: FieldData","com.squareup.kotlinpoet.metadata.specs.FieldData.Companion.SYNTHETIC"]},{"name":"val SYNTHETIC: MethodData","description":"com.squareup.kotlinpoet.metadata.specs.MethodData.Companion.SYNTHETIC","location":"specs/com.squareup.kotlinpoet.metadata.specs/-method-data/-companion/-s-y-n-t-h-e-t-i-c.html","searchKeys":["SYNTHETIC","val SYNTHETIC: MethodData","com.squareup.kotlinpoet.metadata.specs.MethodData.Companion.SYNTHETIC"]},{"name":"val allAnnotations: Collection<AnnotationSpec>","description":"com.squareup.kotlinpoet.metadata.specs.ConstructorData.allAnnotations","location":"specs/com.squareup.kotlinpoet.metadata.specs/-constructor-data/all-annotations.html","searchKeys":["allAnnotations","val allAnnotations: Collection<AnnotationSpec>","com.squareup.kotlinpoet.metadata.specs.ConstructorData.allAnnotations"]},{"name":"val allAnnotations: Collection<AnnotationSpec>","description":"com.squareup.kotlinpoet.metadata.specs.FieldData.allAnnotations","location":"specs/com.squareup.kotlinpoet.metadata.specs/-field-data/all-annotations.html","searchKeys":["allAnnotations","val allAnnotations: Collection<AnnotationSpec>","com.squareup.kotlinpoet.metadata.specs.FieldData.allAnnotations"]},{"name":"val allAnnotations: Collection<AnnotationSpec>","description":"com.squareup.kotlinpoet.metadata.specs.PropertyData.allAnnotations","location":"specs/com.squareup.kotlinpoet.metadata.specs/-property-data/all-annotations.html","searchKeys":["allAnnotations","val allAnnotations: Collection<AnnotationSpec>","com.squareup.kotlinpoet.metadata.specs.PropertyData.allAnnotations"]},{"name":"val annotations: Collection<AnnotationSpec>","description":"com.squareup.kotlinpoet.metadata.specs.EnumEntryData.annotations","location":"specs/com.squareup.kotlinpoet.metadata.specs/-enum-entry-data/annotations.html","searchKeys":["annotations","val annotations: Collection<AnnotationSpec>","com.squareup.kotlinpoet.metadata.specs.EnumEntryData.annotations"]},{"name":"val className: ClassName","description":"com.squareup.kotlinpoet.metadata.specs.ClassData.className","location":"specs/com.squareup.kotlinpoet.metadata.specs/-class-data/class-name.html","searchKeys":["className","val className: ClassName","com.squareup.kotlinpoet.metadata.specs.ClassData.className"]},{"name":"val className: ClassName","description":"com.squareup.kotlinpoet.metadata.specs.FileData.className","location":"specs/com.squareup.kotlinpoet.metadata.specs/-file-data/class-name.html","searchKeys":["className","val className: ClassName","com.squareup.kotlinpoet.metadata.specs.FileData.className"]},{"name":"val constant: CodeBlock?","description":"com.squareup.kotlinpoet.metadata.specs.FieldData.constant","location":"specs/com.squareup.kotlinpoet.metadata.specs/-field-data/constant.html","searchKeys":["constant","val constant: CodeBlock?","com.squareup.kotlinpoet.metadata.specs.FieldData.constant"]},{"name":"val constructors: Map<ImmutableKmConstructor, ConstructorData>","description":"com.squareup.kotlinpoet.metadata.specs.ClassData.constructors","location":"specs/com.squareup.kotlinpoet.metadata.specs/-class-data/constructors.html","searchKeys":["constructors","val constructors: Map<ImmutableKmConstructor, ConstructorData>","com.squareup.kotlinpoet.metadata.specs.ClassData.constructors"]},{"name":"val declarationContainer: ImmutableKmClass?","description":"com.squareup.kotlinpoet.metadata.specs.EnumEntryData.declarationContainer","location":"specs/com.squareup.kotlinpoet.metadata.specs/-enum-entry-data/declaration-container.html","searchKeys":["declarationContainer","val declarationContainer: ImmutableKmClass?","com.squareup.kotlinpoet.metadata.specs.EnumEntryData.declarationContainer"]},{"name":"val exceptions: List<TypeName>","description":"com.squareup.kotlinpoet.metadata.specs.ConstructorData.exceptions","location":"specs/com.squareup.kotlinpoet.metadata.specs/-constructor-data/exceptions.html","searchKeys":["exceptions","val exceptions: List<TypeName>","com.squareup.kotlinpoet.metadata.specs.ConstructorData.exceptions"]},{"name":"val exceptions: List<TypeName>","description":"com.squareup.kotlinpoet.metadata.specs.MethodData.exceptions","location":"specs/com.squareup.kotlinpoet.metadata.specs/-method-data/exceptions.html","searchKeys":["exceptions","val exceptions: List<TypeName>","com.squareup.kotlinpoet.metadata.specs.MethodData.exceptions"]},{"name":"val fieldData: FieldData?","description":"com.squareup.kotlinpoet.metadata.specs.PropertyData.fieldData","location":"specs/com.squareup.kotlinpoet.metadata.specs/-property-data/field-data.html","searchKeys":["fieldData","val fieldData: FieldData?","com.squareup.kotlinpoet.metadata.specs.PropertyData.fieldData"]},{"name":"val fileName: String","description":"com.squareup.kotlinpoet.metadata.specs.FileData.fileName","location":"specs/com.squareup.kotlinpoet.metadata.specs/-file-data/file-name.html","searchKeys":["fileName","val fileName: String","com.squareup.kotlinpoet.metadata.specs.FileData.fileName"]},{"name":"val getterData: MethodData?","description":"com.squareup.kotlinpoet.metadata.specs.PropertyData.getterData","location":"specs/com.squareup.kotlinpoet.metadata.specs/-property-data/getter-data.html","searchKeys":["getterData","val getterData: MethodData?","com.squareup.kotlinpoet.metadata.specs.PropertyData.getterData"]},{"name":"val isJvmField: Boolean","description":"com.squareup.kotlinpoet.metadata.specs.PropertyData.isJvmField","location":"specs/com.squareup.kotlinpoet.metadata.specs/-property-data/is-jvm-field.html","searchKeys":["isJvmField","val isJvmField: Boolean","com.squareup.kotlinpoet.metadata.specs.PropertyData.isJvmField"]},{"name":"val isOverride: Boolean","description":"com.squareup.kotlinpoet.metadata.specs.MethodData.isOverride","location":"specs/com.squareup.kotlinpoet.metadata.specs/-method-data/is-override.html","searchKeys":["isOverride","val isOverride: Boolean","com.squareup.kotlinpoet.metadata.specs.MethodData.isOverride"]},{"name":"val isOverride: Boolean","description":"com.squareup.kotlinpoet.metadata.specs.PropertyData.isOverride","location":"specs/com.squareup.kotlinpoet.metadata.specs/-property-data/is-override.html","searchKeys":["isOverride","val isOverride: Boolean","com.squareup.kotlinpoet.metadata.specs.PropertyData.isOverride"]},{"name":"val isSynthetic: Boolean","description":"com.squareup.kotlinpoet.metadata.specs.ConstructorData.isSynthetic","location":"specs/com.squareup.kotlinpoet.metadata.specs/-constructor-data/is-synthetic.html","searchKeys":["isSynthetic","val isSynthetic: Boolean","com.squareup.kotlinpoet.metadata.specs.ConstructorData.isSynthetic"]},{"name":"val isSynthetic: Boolean","description":"com.squareup.kotlinpoet.metadata.specs.FieldData.isSynthetic","location":"specs/com.squareup.kotlinpoet.metadata.specs/-field-data/is-synthetic.html","searchKeys":["isSynthetic","val isSynthetic: Boolean","com.squareup.kotlinpoet.metadata.specs.FieldData.isSynthetic"]},{"name":"val isSynthetic: Boolean","description":"com.squareup.kotlinpoet.metadata.specs.MethodData.isSynthetic","location":"specs/com.squareup.kotlinpoet.metadata.specs/-method-data/is-synthetic.html","searchKeys":["isSynthetic","val isSynthetic: Boolean","com.squareup.kotlinpoet.metadata.specs.MethodData.isSynthetic"]},{"name":"val jvmModifiers: Set<JvmFieldModifier>","description":"com.squareup.kotlinpoet.metadata.specs.FieldData.jvmModifiers","location":"specs/com.squareup.kotlinpoet.metadata.specs/-field-data/jvm-modifiers.html","searchKeys":["jvmModifiers","val jvmModifiers: Set<JvmFieldModifier>","com.squareup.kotlinpoet.metadata.specs.FieldData.jvmModifiers"]},{"name":"val jvmModifiers: Set<JvmMethodModifier>","description":"com.squareup.kotlinpoet.metadata.specs.ConstructorData.jvmModifiers","location":"specs/com.squareup.kotlinpoet.metadata.specs/-constructor-data/jvm-modifiers.html","searchKeys":["jvmModifiers","val jvmModifiers: Set<JvmMethodModifier>","com.squareup.kotlinpoet.metadata.specs.ConstructorData.jvmModifiers"]},{"name":"val jvmModifiers: Set<JvmMethodModifier>","description":"com.squareup.kotlinpoet.metadata.specs.MethodData.jvmModifiers","location":"specs/com.squareup.kotlinpoet.metadata.specs/-method-data/jvm-modifiers.html","searchKeys":["jvmModifiers","val jvmModifiers: Set<JvmMethodModifier>","com.squareup.kotlinpoet.metadata.specs.MethodData.jvmModifiers"]},{"name":"val jvmName: String?","description":"com.squareup.kotlinpoet.metadata.specs.FileData.jvmName","location":"specs/com.squareup.kotlinpoet.metadata.specs/-file-data/jvm-name.html","searchKeys":["jvmName","val jvmName: String?","com.squareup.kotlinpoet.metadata.specs.FileData.jvmName"]},{"name":"val name: String","description":"com.squareup.kotlinpoet.metadata.specs.JvmFieldModifier.STATIC.name","location":"specs/com.squareup.kotlinpoet.metadata.specs/-jvm-field-modifier/-s-t-a-t-i-c/name.html","searchKeys":["name","val name: String","com.squareup.kotlinpoet.metadata.specs.JvmFieldModifier.STATIC.name"]},{"name":"val name: String","description":"com.squareup.kotlinpoet.metadata.specs.JvmFieldModifier.TRANSIENT.name","location":"specs/com.squareup.kotlinpoet.metadata.specs/-jvm-field-modifier/-t-r-a-n-s-i-e-n-t/name.html","searchKeys":["name","val name: String","com.squareup.kotlinpoet.metadata.specs.JvmFieldModifier.TRANSIENT.name"]},{"name":"val name: String","description":"com.squareup.kotlinpoet.metadata.specs.JvmFieldModifier.VOLATILE.name","location":"specs/com.squareup.kotlinpoet.metadata.specs/-jvm-field-modifier/-v-o-l-a-t-i-l-e/name.html","searchKeys":["name","val name: String","com.squareup.kotlinpoet.metadata.specs.JvmFieldModifier.VOLATILE.name"]},{"name":"val name: String","description":"com.squareup.kotlinpoet.metadata.specs.JvmMethodModifier.DEFAULT.name","location":"specs/com.squareup.kotlinpoet.metadata.specs/-jvm-method-modifier/-d-e-f-a-u-l-t/name.html","searchKeys":["name","val name: String","com.squareup.kotlinpoet.metadata.specs.JvmMethodModifier.DEFAULT.name"]},{"name":"val name: String","description":"com.squareup.kotlinpoet.metadata.specs.JvmMethodModifier.STATIC.name","location":"specs/com.squareup.kotlinpoet.metadata.specs/-jvm-method-modifier/-s-t-a-t-i-c/name.html","searchKeys":["name","val name: String","com.squareup.kotlinpoet.metadata.specs.JvmMethodModifier.STATIC.name"]},{"name":"val name: String","description":"com.squareup.kotlinpoet.metadata.specs.JvmMethodModifier.SYNCHRONIZED.name","location":"specs/com.squareup.kotlinpoet.metadata.specs/-jvm-method-modifier/-s-y-n-c-h-r-o-n-i-z-e-d/name.html","searchKeys":["name","val name: String","com.squareup.kotlinpoet.metadata.specs.JvmMethodModifier.SYNCHRONIZED.name"]},{"name":"val ordinal: Int","description":"com.squareup.kotlinpoet.metadata.specs.JvmFieldModifier.STATIC.ordinal","location":"specs/com.squareup.kotlinpoet.metadata.specs/-jvm-field-modifier/-s-t-a-t-i-c/ordinal.html","searchKeys":["ordinal","val ordinal: Int","com.squareup.kotlinpoet.metadata.specs.JvmFieldModifier.STATIC.ordinal"]},{"name":"val ordinal: Int","description":"com.squareup.kotlinpoet.metadata.specs.JvmFieldModifier.TRANSIENT.ordinal","location":"specs/com.squareup.kotlinpoet.metadata.specs/-jvm-field-modifier/-t-r-a-n-s-i-e-n-t/ordinal.html","searchKeys":["ordinal","val ordinal: Int","com.squareup.kotlinpoet.metadata.specs.JvmFieldModifier.TRANSIENT.ordinal"]},{"name":"val ordinal: Int","description":"com.squareup.kotlinpoet.metadata.specs.JvmFieldModifier.VOLATILE.ordinal","location":"specs/com.squareup.kotlinpoet.metadata.specs/-jvm-field-modifier/-v-o-l-a-t-i-l-e/ordinal.html","searchKeys":["ordinal","val ordinal: Int","com.squareup.kotlinpoet.metadata.specs.JvmFieldModifier.VOLATILE.ordinal"]},{"name":"val ordinal: Int","description":"com.squareup.kotlinpoet.metadata.specs.JvmMethodModifier.DEFAULT.ordinal","location":"specs/com.squareup.kotlinpoet.metadata.specs/-jvm-method-modifier/-d-e-f-a-u-l-t/ordinal.html","searchKeys":["ordinal","val ordinal: Int","com.squareup.kotlinpoet.metadata.specs.JvmMethodModifier.DEFAULT.ordinal"]},{"name":"val ordinal: Int","description":"com.squareup.kotlinpoet.metadata.specs.JvmMethodModifier.STATIC.ordinal","location":"specs/com.squareup.kotlinpoet.metadata.specs/-jvm-method-modifier/-s-t-a-t-i-c/ordinal.html","searchKeys":["ordinal","val ordinal: Int","com.squareup.kotlinpoet.metadata.specs.JvmMethodModifier.STATIC.ordinal"]},{"name":"val ordinal: Int","description":"com.squareup.kotlinpoet.metadata.specs.JvmMethodModifier.SYNCHRONIZED.ordinal","location":"specs/com.squareup.kotlinpoet.metadata.specs/-jvm-method-modifier/-s-y-n-c-h-r-o-n-i-z-e-d/ordinal.html","searchKeys":["ordinal","val ordinal: Int","com.squareup.kotlinpoet.metadata.specs.JvmMethodModifier.SYNCHRONIZED.ordinal"]},{"name":"val parameterAnnotations: Map<Int, Collection<AnnotationSpec>>","description":"com.squareup.kotlinpoet.metadata.specs.ConstructorData.parameterAnnotations","location":"specs/com.squareup.kotlinpoet.metadata.specs/-constructor-data/parameter-annotations.html","searchKeys":["parameterAnnotations","val parameterAnnotations: Map<Int, Collection<AnnotationSpec>>","com.squareup.kotlinpoet.metadata.specs.ConstructorData.parameterAnnotations"]},{"name":"val parameterAnnotations: Map<Int, Collection<AnnotationSpec>>","description":"com.squareup.kotlinpoet.metadata.specs.MethodData.parameterAnnotations","location":"specs/com.squareup.kotlinpoet.metadata.specs/-method-data/parameter-annotations.html","searchKeys":["parameterAnnotations","val parameterAnnotations: Map<Int, Collection<AnnotationSpec>>","com.squareup.kotlinpoet.metadata.specs.MethodData.parameterAnnotations"]},{"name":"val setterData: MethodData?","description":"com.squareup.kotlinpoet.metadata.specs.PropertyData.setterData","location":"specs/com.squareup.kotlinpoet.metadata.specs/-property-data/setter-data.html","searchKeys":["setterData","val setterData: MethodData?","com.squareup.kotlinpoet.metadata.specs.PropertyData.setterData"]},{"name":"val type: TypeName","description":"com.squareup.kotlinpoet.metadata.specs.TypeNameAliasTag.type","location":"specs/com.squareup.kotlinpoet.metadata.specs/-type-name-alias-tag/type.html","searchKeys":["type","val type: TypeName","com.squareup.kotlinpoet.metadata.specs.TypeNameAliasTag.type"]}]
